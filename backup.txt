<template>
    <f7-page name="home">
      <!-- Top Navbar -->
      <f7-navbar title="Durchmesser berechnen"></f7-navbar>
      <!-- Input fields -->
      <f7-block-title>Berechnung des Rund-Duchmessers</f7-block-title>
      <f7-block>
        <f7-list id="inputForm" @submit="onSubmit">
          <f7-list-input
            label="Flachdraht-Breite"
            type="number"
            placeholder="0,0000"
            name="breite"
            v-model:value="breite"
            min="0"
            max="5"
            info="Wertebereich bis max. 5,00 mm"
            step="0.0001"
            clear-button
            required
            validate
            @input="name = $event.target.value"
          >
          </f7-list-input>
          <f7-list-input
            label="Flachdraht-Dicke"
            type="number"
            placeholder="0,0000"
            name="dicke"
            v-model:value="dicke"
            min="0"
            max="5"
            info="Wertebereich bis max. 5,00 mm"
            step="0.0001"
            clear-button
            required
            validate
            @input="name = $event.target.value"
          >
          </f7-list-input>
          <f7-button fill large>Berechnen</f7-button>
        </f7-list>
      </f7-block>
      <!-- Result -->
      <f7-block-title>Ergebnis der Berechnung</f7-block-title>
      <f7-block>
        <f7-row>
          <f7-col width="75">Durchmesser [&#8960;] in mm</f7-col>
          <f7-col width="25" style="font-weight: bold; color: green">
            {{ result }}
          </f7-col>
        </f7-row>
      </f7-block>
      <!-- Parameters -->
      <f7-block-title>Parameter der Berechnung</f7-block-title>
      <f7-block>
        <f7-row>
          <f7-col width="75">Seitenverhältnis [ b / d ]</f7-col>
          <f7-col width="25">{{ aspectRatio }}</f7-col>
        </f7-row>
        <f7-row>
          <f7-col width="75">Ermittelter Korrekturfaktor [ kf ]</f7-col>
          <f7-col width="25">{{ kFactorValue }}</f7-col>
        </f7-row>
        <f7-row>
          <f7-col width="75">Querschnittsfläche in mm&#178; [b*d*kf]</f7-col>
          <f7-col width="25">{{ crossSectionArea }}</f7-col>
        </f7-row>
      </f7-block>
    </f7-page>
  </template>
  
  <script setup>
  import { ref } from "vue";
  import { f7, f7ready } from "framework7-vue";
  import kFactor from "../data/krArray"; // Grosser Array mit Korrekturfaktoren
  
  const pi = Math.PI;
  let d;
  let r;
  
  let breite = ref(null);
  let dicke = ref(null);
  let result = ref(null);
  let kFactorValue = ref(null);
  let aspectRatio = ref(null);
  let crossSectionArea = ref(null);
  
  function round(num, decimals) {
    let m = Number((Math.abs(num) * 100).toPrecision(15));
    return (Math.round(m) / decimals) * Math.sign(num);
  }
  
  function checkValue(isValid) {
    let returnValue = 0;
  
    const valueDicke = parseFloat(dicke.value);
    const valueBreite = parseFloat(breite.value);
  
    // returnValue = valueDicke < valueBreite ? true : false;
  
    if (valueDicke < valueBreite) {
      console.log("TRUE");
      const disabled = 0;
      return true;
    } else {
      const disabled = 1;
      console.log("FALSE");
      return false;
    }
  
    //console.log("Dicke: " + valueDicke + " RETURN: " + returnValue);
    //return returnValue;
  }
  
  function onSubmit(e) {
    const isValid = f7.input.validateInputs("#inputForm");
    if (!isValid) {
      e.preventDefault();
      return;
    }
  }
  
  const calculateDiameter = () => {
    let valueDicke = dicke.value;
    let valueBreite = breite.value;
  
    // Berechne Seitenverhältnis
    let calculatedAspectRatio = round(
      parseFloat(valueBreite) / parseFloat(valueDicke),
      100
    ); // auf 2 Stellen nach dem Komma gerundet
    let calculatedAspectRatioTrailingZeros = calculatedAspectRatio.toFixed(2);
  
    //console.log(typeof calculatedAspectRatioTrailingZeros);
    aspectRatio.value = calculatedAspectRatioTrailingZeros; // string!
  
    // Berechne Korrekturfaktor
    if (calculatedAspectRatio >= 1 && calculatedAspectRatio <= 5.0) {
      kFactorValue.value = kFactor[calculatedAspectRatioTrailingZeros];
    }
  
    // Berechne Korrekturfaktor für Seitenverhältnis grösser 5 und kleiner 17
    if (calculatedAspectRatio > 5 && calculatedAspectRatio <= 17.0) {
      kFactorValue.value = 0.958;
    }
  
    // Korrekturfaktor für die Berechnung
    let korrekturfaktor = kFactor[calculatedAspectRatioTrailingZeros];
  
    // Berechne Querschnittsfläche
    let calculatedCrossSectionArea = valueDicke * valueBreite * korrekturfaktor;
    crossSectionArea.value = calculatedCrossSectionArea.toFixed(4);
  
    // Berechne Rund-Duchmesser / Endergebnis
    r = Math.sqrt(calculatedCrossSectionArea / pi);
    d = r + r;
    result.value = d.toFixed(4);
  
    /* f7.dialog.alert(
          "Dicke: " + state.dicke + "<br>Breite: " + state.breite,
          "Rund-Durchmesser",
          () => {
            f7.loginScreen.close();
          }
        ); */
  };
  </script>
  